// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/influxdata/influxdb/v2/storage (interfaces: PointsWriter)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	"github.com/influxdata/influxdb/v2/kit/platform"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/influxdata/influxdb/v2/models"
)

// MockPointsWriter is a mock of PointsWriter interface
type MockPointsWriter struct {
	ctrl     *gomock.Controller
	recorder *MockPointsWriterMockRecorder
}

// MockPointsWriterMockRecorder is the mock recorder for MockPointsWriter
type MockPointsWriterMockRecorder struct {
	mock *MockPointsWriter
}

// NewMockPointsWriter creates a new mock instance
func NewMockPointsWriter(ctrl *gomock.Controller) *MockPointsWriter {
	mock := &MockPointsWriter{ctrl: ctrl}
	mock.recorder = &MockPointsWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPointsWriter) EXPECT() *MockPointsWriterMockRecorder {
	return m.recorder
}

// WritePoints mocks base method
func (m *MockPointsWriter) WritePoints(arg0 context.Context, arg1, arg2 platform.ID, arg3 []models.Point) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WritePoints", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// WritePoints indicates an expected call of WritePoints
func (mr *MockPointsWriterMockRecorder) WritePoints(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WritePoints", reflect.TypeOf((*MockPointsWriter)(nil).WritePoints), arg0, arg1, arg2, arg3)
}
