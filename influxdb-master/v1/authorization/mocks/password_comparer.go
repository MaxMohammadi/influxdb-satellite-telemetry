// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/influxdata/influxdb/v2/v1/authorization (interfaces: PasswordComparer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	"github.com/influxdata/influxdb/v2/kit/platform"
	reflect "reflect"
)

// MockPasswordComparer is a mock of PasswordComparer interface
type MockPasswordComparer struct {
	ctrl     *gomock.Controller
	recorder *MockPasswordComparerMockRecorder
}

// MockPasswordComparerMockRecorder is the mock recorder for MockPasswordComparer
type MockPasswordComparerMockRecorder struct {
	mock *MockPasswordComparer
}

// NewMockPasswordComparer creates a new mock instance
func NewMockPasswordComparer(ctrl *gomock.Controller) *MockPasswordComparer {
	mock := &MockPasswordComparer{ctrl: ctrl}
	mock.recorder = &MockPasswordComparerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPasswordComparer) EXPECT() *MockPasswordComparerMockRecorder {
	return m.recorder
}

// ComparePassword mocks base method
func (m *MockPasswordComparer) ComparePassword(arg0 context.Context, arg1 platform.ID, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComparePassword", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ComparePassword indicates an expected call of ComparePassword
func (mr *MockPasswordComparerMockRecorder) ComparePassword(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComparePassword", reflect.TypeOf((*MockPasswordComparer)(nil).ComparePassword), arg0, arg1, arg2)
}
