// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/influxdata/idpe/influxql/query (interfaces: ShardMapper)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	query "github.com/influxdata/influxdb/v2/influxql/query"
	influxql "github.com/influxdata/influxql"
)

// MockShardMapper is a mock of ShardMapper interface
type MockShardMapper struct {
	ctrl     *gomock.Controller
	recorder *MockShardMapperMockRecorder
}

// MockShardMapperMockRecorder is the mock recorder for MockShardMapper
type MockShardMapperMockRecorder struct {
	mock *MockShardMapper
}

// NewMockShardMapper creates a new mock instance
func NewMockShardMapper(ctrl *gomock.Controller) *MockShardMapper {
	mock := &MockShardMapper{ctrl: ctrl}
	mock.recorder = &MockShardMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockShardMapper) EXPECT() *MockShardMapperMockRecorder {
	return m.recorder
}

// MapShards mocks base method
func (m *MockShardMapper) MapShards(arg0 context.Context, arg1 influxql.Sources, arg2 influxql.TimeRange, arg3 query.SelectOptions) (query.ShardGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MapShards", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(query.ShardGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MapShards indicates an expected call of MapShards
func (mr *MockShardMapperMockRecorder) MapShards(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MapShards", reflect.TypeOf((*MockShardMapper)(nil).MapShards), arg0, arg1, arg2, arg3)
}
