// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/influxdata/influxdb/v2/tsdb/cursors (interfaces: IntegerArrayCursor)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	cursors "github.com/influxdata/influxdb/v2/tsdb/cursors"
	reflect "reflect"
)

// MockIntegerArrayCursor is a mock of IntegerArrayCursor interface
type MockIntegerArrayCursor struct {
	ctrl     *gomock.Controller
	recorder *MockIntegerArrayCursorMockRecorder
}

// MockIntegerArrayCursorMockRecorder is the mock recorder for MockIntegerArrayCursor
type MockIntegerArrayCursorMockRecorder struct {
	mock *MockIntegerArrayCursor
}

// NewMockIntegerArrayCursor creates a new mock instance
func NewMockIntegerArrayCursor(ctrl *gomock.Controller) *MockIntegerArrayCursor {
	mock := &MockIntegerArrayCursor{ctrl: ctrl}
	mock.recorder = &MockIntegerArrayCursorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIntegerArrayCursor) EXPECT() *MockIntegerArrayCursorMockRecorder {
	return m.recorder
}

// Close mocks base method
func (m *MockIntegerArrayCursor) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close
func (mr *MockIntegerArrayCursorMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockIntegerArrayCursor)(nil).Close))
}

// Err mocks base method
func (m *MockIntegerArrayCursor) Err() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Err")
	ret0, _ := ret[0].(error)
	return ret0
}

// Err indicates an expected call of Err
func (mr *MockIntegerArrayCursorMockRecorder) Err() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Err", reflect.TypeOf((*MockIntegerArrayCursor)(nil).Err))
}

// Next mocks base method
func (m *MockIntegerArrayCursor) Next() *cursors.IntegerArray {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Next")
	ret0, _ := ret[0].(*cursors.IntegerArray)
	return ret0
}

// Next indicates an expected call of Next
func (mr *MockIntegerArrayCursorMockRecorder) Next() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockIntegerArrayCursor)(nil).Next))
}

// Stats mocks base method
func (m *MockIntegerArrayCursor) Stats() cursors.CursorStats {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stats")
	ret0, _ := ret[0].(cursors.CursorStats)
	return ret0
}

// Stats indicates an expected call of Stats
func (mr *MockIntegerArrayCursorMockRecorder) Stats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stats", reflect.TypeOf((*MockIntegerArrayCursor)(nil).Stats))
}
